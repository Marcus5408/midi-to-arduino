/*
2.07 - Challenge 2: Jingle all the Way
--------------------------------------
By Issac Liu, Pd 7/8 Odd
12/8/2024

Uses a void-type function to buzz,
playing out a melody.
*/

// Set up the melody array.
// Each row contains a frequency, duration, and velocity.
// The melody array tends to be too large to fit in SRAM,
// so it is stored in PROGMEM instead.
const PROGMEM int melody[696][3] = {
  { 554, 0, 80 },
  { 554, 568, 0 },
  { 1108, 31, 80 },
  { 1108, 568, 0 },
  { 987, 31, 80 },
  { 987, 62, 0 },
  { 1108, 1, 80 },
  { 1108, 62, 0 },
  { 987, 2, 80 },
  { 987, 730, 0 },
  { 880, 41, 80 },
  { 880, 283, 0 },
  { 830, 16, 80 },
  { 830, 568, 0 },
  { 739, 31, 80 },
  { 739, 283, 0 },
  { 987, 16, 80 },
  { 987, 283, 0 },
  { 830, 16, 80 },
  { 830, 62, 0 },
  { 880, 1, 80 },
  { 880, 62, 0 },
  { 830, 2, 80 },
  { 830, 445, 0 },
  { 739, 26, 80 },
  { 739, 568, 0 },
  { 554, 31, 80 },
  { 554, 568, 0 },
  { 1108, 31, 80 },
  { 1108, 568, 0 },
  { 987, 31, 80 },
  { 987, 62, 0 },
  { 1108, 1, 80 },
  { 1108, 62, 0 },
  { 987, 2, 80 },
  { 987, 730, 0 },
  { 880, 41, 80 },
  { 880, 283, 0 },
  { 830, 16, 80 },
  { 830, 568, 0 },
  { 739, 31, 80 },
  { 739, 283, 0 },
  { 987, 16, 80 },
  { 987, 283, 0 },
  { 830, 16, 80 },
  { 830, 62, 0 },
  { 880, 1, 80 },
  { 880, 62, 0 },
  { 830, 2, 80 },
  { 830, 445, 0 },
  { 739, 26, 80 },
  { 739, 568, 0 },
  { 554, 31, 80 },
  { 554, 568, 0 },
  { 1108, 31, 80 },
  { 1108, 568, 0 },
  { 987, 31, 80 },
  { 987, 62, 0 },
  { 1108, 1, 80 },
  { 1108, 62, 0 },
  { 987, 2, 80 },
  { 987, 730, 0 },
  { 880, 41, 80 },
  { 880, 283, 0 },
  { 830, 16, 80 },
  { 830, 568, 0 },
  { 739, 31, 80 },
  { 739, 283, 0 },
  { 987, 16, 80 },
  { 987, 283, 0 },
  { 830, 16, 80 },
  { 830, 62, 0 },
  { 880, 1, 80 },
  { 880, 62, 0 },
  { 830, 2, 80 },
  { 830, 445, 0 },
  { 739, 26, 80 },
  { 739, 568, 0 },
  { 739, 31, 80 },
  { 739, 426, 0 },
  { 830, 23, 80 },
  { 830, 70, 0 },
  { 739, 5, 80 },
  { 739, 70, 0 },
  { 659, 5, 80 },
  { 659, 283, 0 },
  { 987, 16, 80 },
  { 987, 283, 0 },
  { 739, 16, 80 },
  { 739, 426, 0 },
  { 830, 23, 80 },
  { 830, 70, 0 },
  { 739, 5, 80 },
  { 739, 70, 0 },
  { 659, 5, 80 },
  { 659, 568, 0 },
  { 622, 31, 80 },
  { 622, 426, 0 },
  { 659, 23, 80 },
  { 659, 70, 0 },
  { 622, 5, 80 },
  { 622, 70, 0 },
  { 554, 5, 80 },
  { 554, 283, 0 },
  { 739, 16, 80 },
  { 739, 283, 0 },
  { 554, 16, 80 },
  { 554, 62, 0 },
  { 622, 1, 80 },
  { 622, 1076, 0 },
  { 739, 360, 80 },
  { 739, 62, 0 },
  { 830, 1, 80 },
  { 830, 221, 0 },
  { 554, 15, 80 },
  { 554, 283, 0 },
  { 659, 16, 80 },
  { 659, 283, 0 },
  { 622, 16, 80 },
  { 622, 283, 0 },
  { 659, 16, 80 },
  { 659, 283, 0 },
  { 622, 16, 80 },
  { 622, 283, 0 },
  { 554, 16, 80 },
  { 554, 283, 0 },
  { 493, 16, 80 },
  { 493, 568, 0 },
  { 739, 2131, 80 },
  { 739, 62, 0 },
  { 830, 1, 80 },
  { 830, 221, 0 },
  { 739, 15, 80 },
  { 739, 283, 0 },
  { 659, 16, 80 },
  { 659, 283, 0 },
  { 622, 16, 80 },
  { 622, 141, 0 },
  { 622, 8, 80 },
  { 622, 141, 0 },
  { 659, 8, 80 },
  { 659, 141, 0 },
  { 659, 8, 80 },
  { 659, 141, 0 },
  { 739, 8, 80 },
  { 739, 283, 0 },
  { 987, 16, 80 },
  { 987, 148, 0 },
  { 932, 1, 80 },
  { 932, 73, 0 },
  { 880, 1, 80 },
  { 880, 73, 0 },
  { 830, 1, 80 },
  { 830, 568, 0 },
  { 1108, 2131, 80 },
  { 1108, 283, 0 },
  { 987, 16, 80 },
  { 987, 283, 0 },
  { 880, 16, 80 },
  { 880, 283, 0 },
  { 830, 16, 80 },
  { 830, 141, 0 },
  { 830, 8, 80 },
  { 830, 141, 0 },
  { 880, 8, 80 },
  { 880, 141, 0 },
  { 880, 8, 80 },
  { 880, 141, 0 },
  { 830, 8, 80 },
  { 830, 141, 0 },
  { 830, 8, 80 },
  { 830, 141, 0 },
  { 987, 8, 80 },
  { 987, 283, 0 },
  { 830, 16, 80 },
  { 830, 141, 0 },
  { 739, 8, 80 },
  { 739, 996, 0 },
  { 554, 653, 80 },
  { 554, 283, 0 },
  { 987, 16, 80 },
  { 987, 283, 0 },
  { 987, 16, 80 },
  { 987, 283, 0 },
  { 880, 16, 80 },
  { 880, 141, 0 },
  { 987, 8, 80 },
  { 987, 141, 0 },
  { 880, 8, 80 },
  { 880, 283, 0 },
  { 830, 16, 80 },
  { 830, 141, 0 },
  { 880, 8, 80 },
  { 880, 141, 0 },
  { 830, 8, 80 },
  { 830, 283, 0 },
  { 739, 16, 80 },
  { 739, 141, 0 },
  { 830, 8, 80 },
  { 830, 141, 0 },
  { 739, 8, 80 },
  { 739, 283, 0 },
  { 659, 16, 80 },
  { 659, 283, 0 },
  { 554, 16, 80 },
  { 554, 568, 0 },
  { 830, 2131, 80 },
  { 830, 283, 0 },
  { 554, 16, 80 },
  { 554, 283, 0 },
  { 659, 16, 80 },
  { 659, 283, 0 },
  { 622, 16, 80 },
  { 622, 283, 0 },
  { 659, 16, 80 },
  { 659, 283, 0 },
  { 622, 16, 80 },
  { 622, 283, 0 },
  { 554, 16, 80 },
  { 554, 283, 0 },
  { 493, 16, 80 },
  { 493, 568, 0 },
  { 830, 2131, 80 },
  { 830, 283, 0 },
  { 739, 16, 80 },
  { 739, 283, 0 },
  { 659, 16, 80 },
  { 659, 283, 0 },
  { 622, 16, 80 },
  { 622, 141, 0 },
  { 622, 8, 80 },
  { 622, 141, 0 },
  { 659, 8, 80 },
  { 659, 141, 0 },
  { 659, 8, 80 },
  { 659, 141, 0 },
  { 739, 8, 80 },
  { 739, 283, 0 },
  { 987, 16, 80 },
  { 987, 148, 0 },
  { 932, 1, 80 },
  { 932, 73, 0 },
  { 880, 1, 80 },
  { 880, 73, 0 },
  { 830, 1, 80 },
  { 830, 568, 0 },
  { 1108, 2131, 80 },
  { 1108, 283, 0 },
  { 987, 16, 80 },
  { 987, 283, 0 },
  { 880, 16, 80 },
  { 880, 283, 0 },
  { 830, 16, 80 },
  { 830, 141, 0 },
  { 830, 8, 80 },
  { 830, 141, 0 },
  { 880, 8, 80 },
  { 880, 141, 0 },
  { 880, 8, 80 },
  { 880, 141, 0 },
  { 830, 8, 80 },
  { 830, 141, 0 },
  { 830, 8, 80 },
  { 830, 141, 0 },
  { 987, 8, 80 },
  { 987, 283, 0 },
  { 739, 16, 80 },
  { 739, 711, 0 },
  { 830, 38, 80 },
  { 830, 70, 0 },
  { 739, 5, 80 },
  { 739, 70, 0 },
  { 659, 5, 80 },
  { 659, 141, 0 },
  { 739, 8, 80 },
  { 739, 141, 0 },
  { 830, 8, 80 },
  { 830, 283, 0 },
  { 554, 316, 80 },
  { 554, 283, 0 },
  { 987, 16, 80 },
  { 987, 283, 0 },
  { 987, 16, 80 },
  { 987, 283, 0 },
  { 880, 16, 80 },
  { 880, 141, 0 },
  { 987, 8, 80 },
  { 987, 141, 0 },
  { 880, 8, 80 },
  { 880, 283, 0 },
  { 830, 16, 80 },
  { 830, 141, 0 },
  { 880, 8, 80 },
  { 880, 141, 0 },
  { 830, 8, 80 },
  { 830, 283, 0 },
  { 739, 16, 80 },
  { 739, 141, 0 },
  { 830, 8, 80 },
  { 830, 141, 0 },
  { 739, 8, 80 },
  { 739, 283, 0 },
  { 659, 16, 80 },
  { 659, 283, 0 },
  { 622, 16, 80 },
  { 622, 568, 0 },
  { 554, 2131, 80 },
  { 554, 568, 0 },
  { 830, 31, 80 },
  { 830, 283, 0 },
  { 1108, 16, 80 },
  { 1108, 426, 0 },
  { 987, 23, 80 },
  { 987, 141, 0 },
  { 830, 8, 80 },
  { 830, 568, 0 },
  { 493, 31, 80 },
  { 493, 283, 0 },
  { 739, 16, 80 },
  { 739, 283, 0 },
  { 987, 16, 80 },
  { 987, 426, 0 },
  { 830, 23, 80 },
  { 830, 141, 0 },
  { 739, 8, 80 },
  { 739, 1138, 0 },
  { 830, 61, 80 },
  { 830, 283, 0 },
  { 830, 16, 80 },
  { 830, 141, 0 },
  { 830, 8, 80 },
  { 830, 283, 0 },
  { 830, 16, 80 },
  { 830, 141, 0 },
  { 830, 8, 80 },
  { 830, 141, 0 },
  { 880, 8, 80 },
  { 880, 141, 0 },
  { 830, 8, 80 },
  { 830, 283, 0 },
  { 739, 16, 80 },
  { 739, 141, 0 },
  { 739, 8, 80 },
  { 739, 283, 0 },
  { 554, 16, 80 },
  { 554, 141, 0 },
  { 659, 8, 80 },
  { 659, 141, 0 },
  { 739, 8, 80 },
  { 739, 141, 0 },
  { 830, 8, 80 },
  { 830, 283, 0 },
  { 830, 16, 80 },
  { 830, 141, 0 },
  { 830, 8, 80 },
  { 830, 283, 0 },
  { 830, 16, 80 },
  { 830, 141, 0 },
  { 830, 8, 80 },
  { 830, 141, 0 },
  { 880, 8, 80 },
  { 880, 141, 0 },
  { 830, 8, 80 },
  { 830, 283, 0 },
  { 739, 16, 80 },
  { 739, 141, 0 },
  { 739, 8, 80 },
  { 739, 283, 0 },
  { 659, 16, 80 },
  { 659, 141, 0 },
  { 739, 8, 80 },
  { 739, 283, 0 },
  { 554, 316, 80 },
  { 554, 568, 0 },
  { 830, 31, 80 },
  { 830, 283, 0 },
  { 1108, 16, 80 },
  { 1108, 426, 0 },
  { 987, 23, 80 },
  { 987, 141, 0 },
  { 830, 8, 80 },
  { 830, 568, 0 },
  { 493, 31, 80 },
  { 493, 283, 0 },
  { 739, 16, 80 },
  { 739, 283, 0 },
  { 987, 16, 80 },
  { 987, 426, 0 },
  { 830, 23, 80 },
  { 830, 141, 0 },
  { 739, 8, 80 },
  { 739, 853, 0 },
  { 415, 46, 80 },
  { 415, 141, 0 },
  { 493, 8, 80 },
  { 493, 141, 0 },
  { 554, 8, 80 },
  { 554, 283, 0 },
  { 493, 16, 80 },
  { 493, 141, 0 },
  { 554, 8, 80 },
  { 554, 141, 0 },
  { 659, 8, 80 },
  { 659, 283, 0 },
  { 554, 16, 80 },
  { 554, 141, 0 },
  { 659, 8, 80 },
  { 659, 141, 0 },
  { 739, 8, 80 },
  { 739, 141, 0 },
  { 739, 8, 80 },
  { 739, 141, 0 },
  { 659, 8, 80 },
  { 659, 141, 0 },
  { 739, 8, 80 },
  { 739, 141, 0 },
  { 830, 8, 80 },
  { 830, 283, 0 },
  { 987, 16, 80 },
  { 987, 283, 0 },
  { 1108, 16, 80 },
  { 1108, 568, 0 },
  { 830, 31, 80 },
  { 830, 283, 0 },
  { 987, 16, 80 },
  { 987, 283, 0 },
  { 1108, 16, 80 },
  { 1108, 568, 0 },
  { 830, 31, 80 },
  { 830, 283, 0 },
  { 987, 16, 80 },
  { 987, 283, 0 },
  { 554, 16, 80 },
  { 554, 283, 0 },
  { 659, 16, 80 },
  { 659, 283, 0 },
  { 739, 16, 80 },
  { 739, 568, 0 },
  { 554, 31, 80 },
  { 554, 283, 0 },
  { 659, 16, 80 },
  { 659, 283, 0 },
  { 739, 16, 80 },
  { 739, 568, 0 },
  { 739, 31, 80 },
  { 739, 283, 0 },
  { 739, 16, 80 },
  { 739, 141, 0 },
  { 739, 8, 80 },
  { 739, 283, 0 },
  { 739, 16, 80 },
  { 739, 283, 0 },
  { 830, 16, 80 },
  { 830, 141, 0 },
  { 739, 8, 80 },
  { 739, 283, 0 },
  { 659, 16, 80 },
  { 659, 283, 0 },
  { 554, 16, 80 },
  { 554, 283, 0 },
  { 493, 16, 80 },
  { 493, 283, 0 },
  { 554, 16, 80 },
  { 554, 283, 0 },
  { 659, 16, 80 },
  { 659, 283, 0 },
  { 739, 16, 80 },
  { 739, 568, 0 },
  { 554, 31, 80 },
  { 554, 283, 0 },
  { 659, 16, 80 },
  { 659, 283, 0 },
  { 739, 16, 80 },
  { 739, 568, 0 },
  { 739, 31, 80 },
  { 739, 283, 0 },
  { 739, 16, 80 },
  { 739, 141, 0 },
  { 739, 8, 80 },
  { 739, 141, 0 },
  { 739, 8, 80 },
  { 739, 141, 0 },
  { 739, 8, 80 },
  { 739, 141, 0 },
  { 739, 8, 80 },
  { 739, 141, 0 },
  { 987, 8, 80 },
  { 987, 141, 0 },
  { 880, 8, 80 },
  { 880, 141, 0 },
  { 830, 8, 80 },
  { 830, 141, 0 },
  { 739, 8, 80 },
  { 739, 141, 0 },
  { 659, 8, 80 },
  { 659, 141, 0 },
  { 830, 8, 80 },
  { 830, 568, 0 },
  { 1108, 31, 80 },
  { 1108, 283, 0 },
  { 1108, 16, 80 },
  { 1108, 141, 0 },
  { 1108, 8, 80 },
  { 1108, 141, 0 },
  { 1108, 8, 80 },
  { 1108, 141, 0 },
  { 830, 8, 80 },
  { 830, 141, 0 },
  { 830, 8, 80 },
  { 830, 141, 0 },
  { 830, 8, 80 },
  { 830, 141, 0 },
  { 830, 8, 80 },
  { 830, 283, 0 },
  { 1244, 16, 80 },
  { 1244, 283, 0 },
  { 1244, 16, 80 },
  { 1244, 568, 0 },
  { 1244, 31, 80 },
  { 1244, 283, 0 },
  { 1244, 16, 80 },
  { 1244, 141, 0 },
  { 1244, 8, 80 },
  { 1244, 141, 0 },
  { 1244, 8, 80 },
  { 1244, 141, 0 },
  { 830, 8, 80 },
  { 830, 141, 0 },
  { 830, 8, 80 },
  { 830, 141, 0 },
  { 830, 8, 80 },
  { 830, 141, 0 },
  { 830, 8, 80 },
  { 830, 283, 0 },
  { 1318, 16, 80 },
  { 1318, 283, 0 },
  { 1318, 16, 80 },
  { 1318, 141, 0 },
  { 1244, 8, 80 },
  { 1244, 141, 0 },
  { 1108, 8, 80 },
  { 1108, 141, 0 },
  { 987, 8, 80 },
  { 987, 141, 0 },
  { 1108, 8, 80 },
  { 1108, 568, 0 },
  { 1318, 31, 80 },
  { 1318, 141, 0 },
  { 1244, 8, 80 },
  { 1244, 141, 0 },
  { 1108, 8, 80 },
  { 1108, 141, 0 },
  { 987, 8, 80 },
  { 987, 141, 0 },
  { 1108, 8, 80 },
  { 1108, 568, 0 },
  { 1318, 31, 80 },
  { 1318, 141, 0 },
  { 1244, 8, 80 },
  { 1244, 141, 0 },
  { 1108, 8, 80 },
  { 1108, 141, 0 },
  { 987, 8, 80 },
  { 987, 141, 0 },
  { 1108, 8, 80 },
  { 1108, 283, 0 },
  { 987, 16, 80 },
  { 987, 283, 0 },
  { 830, 16, 80 },
  { 830, 283, 0 },
  { 987, 16, 80 },
  { 987, 283, 0 },
  { 1108, 16, 80 },
  { 1108, 283, 0 },
  { 987, 16, 80 },
  { 987, 141, 0 },
  { 830, 8, 80 },
  { 830, 141, 0 },
  { 783, 8, 80 },
  { 783, 141, 0 },
  { 739, 8, 80 },
  { 739, 141, 0 },
  { 659, 8, 80 },
  { 659, 141, 0 },
  { 554, 8, 80 },
  { 554, 141, 0 },
  { 554, 8, 80 },
  { 554, 568, 0 },
  { 1108, 31, 80 },
  { 1108, 568, 0 },
  { 987, 31, 80 },
  { 987, 62, 0 },
  { 1108, 1, 80 },
  { 1108, 62, 0 },
  { 987, 2, 80 },
  { 987, 730, 0 },
  { 880, 41, 80 },
  { 880, 283, 0 },
  { 830, 16, 80 },
  { 830, 568, 0 },
  { 739, 31, 80 },
  { 739, 283, 0 },
  { 987, 16, 80 },
  { 987, 283, 0 },
  { 830, 16, 80 },
  { 830, 62, 0 },
  { 880, 1, 80 },
  { 880, 62, 0 },
  { 830, 2, 80 },
  { 830, 445, 0 },
  { 739, 26, 80 },
  { 739, 568, 0 },
  { 554, 31, 80 },
  { 554, 568, 0 },
  { 1108, 31, 80 },
  { 1108, 568, 0 },
  { 987, 31, 80 },
  { 987, 62, 0 },
  { 1108, 1, 80 },
  { 1108, 62, 0 },
  { 987, 2, 80 },
  { 987, 730, 0 },
  { 880, 41, 80 },
  { 880, 283, 0 },
  { 830, 16, 80 },
  { 830, 568, 0 },
  { 739, 31, 80 },
  { 739, 283, 0 },
  { 987, 16, 80 },
  { 987, 283, 0 },
  { 830, 16, 80 },
  { 830, 62, 0 },
  { 880, 1, 80 },
  { 880, 62, 0 },
  { 830, 2, 80 },
  { 830, 445, 0 },
  { 739, 26, 80 },
  { 739, 568, 0 },
  { 554, 31, 80 },
  { 554, 568, 0 },
  { 1108, 31, 80 },
  { 1108, 568, 0 },
  { 987, 31, 80 },
  { 987, 62, 0 },
  { 1108, 1, 80 },
  { 1108, 62, 0 },
  { 987, 2, 80 },
  { 987, 730, 0 },
  { 880, 41, 80 },
  { 880, 283, 0 },
  { 830, 16, 80 },
  { 830, 568, 0 },
  { 739, 31, 80 },
  { 739, 283, 0 },
  { 987, 16, 80 },
  { 987, 283, 0 },
  { 830, 16, 80 },
  { 830, 62, 0 },
  { 880, 1, 80 },
  { 880, 62, 0 },
  { 830, 2, 80 },
  { 830, 445, 0 },
  { 739, 26, 80 },
  { 739, 568, 0 },
  { 739, 31, 80 },
  { 739, 426, 0 },
  { 830, 23, 80 },
  { 830, 70, 0 },
  { 739, 5, 80 },
  { 739, 70, 0 },
  { 659, 5, 80 },
  { 659, 283, 0 },
  { 987, 16, 80 },
  { 987, 283, 0 },
  { 739, 16, 80 },
  { 739, 426, 0 },
  { 830, 23, 80 },
  { 830, 70, 0 },
  { 739, 5, 80 },
  { 739, 70, 0 },
  { 659, 5, 80 },
  { 659, 568, 0 },
  { 622, 31, 80 },
  { 622, 426, 0 },
  { 659, 23, 80 },
  { 659, 70, 0 },
  { 622, 5, 80 },
  { 622, 70, 0 },
  { 554, 5, 80 },
  { 554, 283, 0 },
  { 739, 16, 80 },
  { 739, 283, 0 },
  { 554, 16, 80 },
  { 554, 62, 0 },
  { 622, 1, 80 },
  { 622, 1076, 0 },
};
int passBuzzer = 9;

void setup() {
  pinMode(passBuzzer, OUTPUT);
  Serial.begin(9600);
}

void buzz(int frequency, int duration, int velocity) {
  // Map the velocity (0-127) to a duty cycle (0-255)
  int dutyCycle = map(velocity, 0, 127, 0, 255);

  // Play the tone with the calculated duty cycle
  analogWrite(passBuzzer, dutyCycle);
  tone(passBuzzer, frequency, duration);
  delay(duration);
  noTone(passBuzzer);
  analogWrite(passBuzzer, 0);
}

// Calculate the length of the melody array
int melodyLength = sizeof melody / sizeof melody[0];
void loop() {
  // Iterate through the melody array
  for (int i = 0; i < melodyLength; i++) {
    // Read the frequency, duration, and velocity from the melody array.
    // Because the melody array is stored in PROGMEM, we use pgm_read_word
    // to read the values.
    int frequency = pgm_read_word(&melody[i][0]);
    long duration = pgm_read_word(&melody[i][1]);
    int velocity = pgm_read_word(&melody[i][2]);

    // Debug print the frequency, duration, and velocity
    Serial.print("Frequency: ");
    Serial.print(frequency);
    Serial.print(" Duration: ");
    Serial.print(duration);
    Serial.print(" Velocity: ");
    Serial.println(velocity);

    // Play the note
    buzz(frequency, duration, velocity);
  }
  // Restart the melody after a 3 second delay
  delay(3000);
}
